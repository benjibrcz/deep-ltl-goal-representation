=== Subgoal Steering Trajectory Visualization ===
Environment: PointLtl2-v0
Experiment: big_test
Formula: GF blue & GF green

Observation shape: (80,)
Num LTLNet params: 7536
Training probe for steering...
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
Goal satisfied, advancing sequence! Subgoal: blue, Agent pos: [ 1.08768413 -1.45559439], Zone center: [0.1 0. ], Dist: 1.7590551340499936, Radius: 0.8
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
Goal satisfied, advancing sequence! Subgoal: green, Agent pos: [-0.88290672  2.17362469], Zone center: [0.7 0.7], Dist: 2.1626750620115898, Radius: 0.5
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
Goal satisfied, advancing sequence! Subgoal: blue, Agent pos: [-0.54437751 12.49210629], Zone center: [0.1 0. ], Dist: 12.508714640335196, Radius: 0.8
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
Goal satisfied, advancing sequence! Subgoal: green, Agent pos: [-0.59328951 -2.86499105], Zone center: [0.7 0.7], Dist: 3.792328959610373, Radius: 0.5
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
Goal satisfied, advancing sequence! Subgoal: blue, Agent pos: [-0.29030027 12.24265039], Zone center: [0.1 0. ], Dist: 12.248870266105088, Radius: 0.8
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
Goal satisfied, advancing sequence! Subgoal: green, Agent pos: [-0.33914501  1.77858071], Zone center: [0.7 0.7], Dist: 1.4977178339520492, Radius: 0.5
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
[DEBUG] Probe training hook, layer: policy_mlp_0, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
Collected 500 valid samples for probe training
Probe accuracy: 0.992

=== Unsteered rollouts (steering_strength=0.0) ===

World file: eval_datasets/PointLtl2-v0/worlds/world_info_0.pkl
Running steered rollout with strength 0.0...
Step 0: Agent position: [-0.59946701  1.71584763  0.1       ]
Step 0: obs['propositions']: []
Step 0: info['propositions']: None
Step 0: info (raw): {}
Step 0: Current subgoal: None
[DEBUG] Steering layer: ltl_rnn, output type: <class 'torch.Tensor'>, output shape: torch.Size([1, 64])
